{"version":3,"sources":["utils/components.js","components/Nav.js","context/ContextProvider.js","components/NewNote.js","components/DeleteAlert.js","components/NoteList.js","components/Hello.js","App.js","index.js"],"names":["FlexWrap","styled","div","props","bgcolor","grow","shrink","basis","direction","justifyContent","align","height","width","margin","padding","FlexItem","fontSize","Nav","NavWrap","id","Avatar","variant","alt","FaceRounded","Tooltip","arrow","enterDelay","enterNextDelay","placement","title","to","IconButton","HomeOutlined","AddBoxOutlined","SubjectOutlined","Context","React","createContext","useContextProvider","useContext","reducer","state","action","note","details","date","time","important","type","keys","JSON","parse","localStorage","getItem","uniqueKeys","Array","from","Set","find","key","setItem","stringify","notes","forEach","keyItem","newItem","error","console","log","message","index","indexOf","splice","removeItem","filter","item","ContextProvider","children","useReducer","values","getTime","Date","hour","getHours","minute","getMinutes","dispatch","Provider","value","NewNote","useState","setTitle","setDetails","setId","setImportant","d","timeNow","toTimeString","substring","today","getDate","toString","length","dateNow","getMonth","getFullYear","a","now","grabCurrentNote","currentNote","undefined","parsedNote","useEffect","FlexContainer","Form","autoComplete","TextField","label","fullWidth","size","autoFocus","onChange","e","target","Icon","onClick","color","ErrorOutline","NoteAddOutlined","Divider","TextArea","placeholder","Button","disableElevation","form","textarea","DeleteAlert","open","handleClose","itemToDelete","DeleteDialog","onClose","DialogTitle","DialogContent","DialogContentText","DialogActions","ActionButton","hover","fontcolor","Dialog","NoteList","anchorEl","setAnchorEl","Boolean","posX","posY","setPosition","deleteAlert","setDeleteAlert","setItemToDelete","setCurrentNote","closePopover","setTimeout","document","getElementById","click","MainContainer","Header","orientation","NotesWrapper","map","ContentWrap","onContextMenu","clientX","clientY","preventDefault","stopPropagation","openPopover","FlexChild","Popover","anchorReference","anchorPosition","top","left","ContextOption","editItem","Footer","HelpOutline","Hello","greeting","setWidth","window","addEventListener","innerWidth","err","windowResize","Container","HelloTag","Instructions","App","StylesProvider","injectFirst","exact","path","ReactDOM","render"],"mappings":"wNAEaA,EAAWC,IAAOC,IAAV,yTAGI,SAAAC,GAAK,OAAIA,EAAMC,WACtB,SAAAD,GAAK,OAAIA,EAAME,QACb,SAAAF,GAAK,OAAIA,EAAMG,UAChB,SAAAH,GAAK,OAAIA,EAAMI,SACX,SAAAJ,GAAK,OAAIA,EAAMK,aACd,SAAAL,GAAK,OAAIA,EAAMM,kBACnB,SAAAN,GAAK,OAAIA,EAAMO,SACpB,SAAAP,GAAK,OAAIA,EAAMQ,UAChB,SAAAR,GAAK,OAAIA,EAAMS,SACd,SAAAT,GAAK,OAAIA,EAAMU,UACd,SAAAV,GACR,OAASA,EAAMW,SACX,KAAK,EACD,MAAO,SAEX,KAAK,IACD,MAAO,cAEX,KAAK,EACD,MAAO,QAEX,KAAK,EACD,MAAO,UAEX,QACI,MAAO,SAKVC,EAAWd,YAAOD,EAAPC,CAAH,2NAOH,SAAAE,GAAK,OAAIA,EAAMa,Y,8ECalBC,EAjDH,WACR,OACI,eAACC,EAAD,CAASV,UAAU,SAASW,GAAG,MAAMb,OAAQ,EAAGD,KAAM,EAAGK,MAAM,SAA/D,UACI,cAACU,EAAA,EAAD,CAAQC,QAAQ,UAAUC,IAAI,UAA9B,SACI,cAACC,EAAA,EAAD,MAEJ,cAACC,EAAA,EAAD,CACIC,OAAK,EACLC,WAAY,IACZC,eAAgB,IAChBC,UAAU,QACVC,MAAM,OALV,SAOI,cAAC,IAAD,CAAMC,GAAG,gBAAT,SACI,cAACC,EAAA,EAAD,CAAYZ,GAAG,OAAf,SACI,cAACa,EAAA,EAAD,UAIZ,cAACR,EAAA,EAAD,CACIC,OAAK,EACLC,WAAY,IACZC,eAAgB,IAChBC,UAAU,QACVC,MAAM,WALV,SAOI,cAAC,IAAD,CAAMC,GAAG,mBAAT,SACI,cAACC,EAAA,EAAD,CAAYZ,GAAG,WAAf,SACI,cAACc,EAAA,EAAD,UAIZ,cAACT,EAAA,EAAD,CACIC,OAAK,EACLC,WAAY,IACZC,eAAgB,IAChBC,UAAU,QACVC,MAAM,YALV,SAOI,cAAC,IAAD,CAAMC,GAAG,wBAAT,SACI,cAACC,EAAA,EAAD,UACI,cAACG,EAAA,EAAD,cAUlBhB,EAAUjB,YAAOD,EAAPC,CAAH,+O,yCCvDPkC,EAAUC,IAAMC,gBACTC,EAAqB,kBAAMC,qBAAWJ,IAE7CK,EAAU,SAAEC,EAAOC,GAErB,IAAMC,EAAO,CACTd,MAAOa,EAAOb,MACde,QAASF,EAAOE,QAChBzB,GAAIuB,EAAOvB,GACX0B,KAAMH,EAAOG,KACbC,KAAMJ,EAAOI,KACbC,UAAWL,EAAOK,WAItB,OAAQL,EAAOM,MAEX,IAAK,WACD,IAAMC,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACvCC,EAAaC,MAAMC,KAAK,IAAIC,IAAIR,IAUtC,OARcK,EAAWI,MAAK,SAAAC,GAAG,OAAIA,IAAG,UAAQjB,EAAOvB,QAEnDiC,aAAaQ,QACT,OAAQV,KAAKW,UAAL,sBAAmBP,GAAnB,WAAkCZ,EAAOvB,QAEzDiC,aAAaQ,QAAb,UAAwBlB,EAAOvB,IAAM+B,KAAKW,UAAUlB,IACpDS,aAAaQ,QAAS,cAAeV,KAAKW,UAAUlB,IAE7C,CAAEmB,MAAO,IAGpB,IAAK,eACD,IACiBZ,KAAKC,MAAMC,aAAaC,QAAQ,SACxCU,SAAS,SAACC,GACX,IAAMC,EAAUf,KAAKC,MAAMC,aAAaC,QAAQW,IAClCvB,EAAMqB,MAAMJ,MAAK,SAAAf,GAAI,OAAIA,EAAKxB,KAAO8C,EAAQ9C,QAC9CsB,EAAMqB,MAAN,sBAAmBrB,EAAMqB,OAAzB,CAAgCG,QAGrD,MAAMC,GAASC,QAAQC,IAAIF,EAAMG,SARjC,QASU,MAAO,CAAEP,MAAM,YAAMrB,EAAMqB,QAGzC,IAAK,cACD,IAAMb,EAAOC,KAAKC,MAAMC,aAAaC,QAAQ,SACvCiB,EAAQrB,EAAKsB,QAAL,UAAgB7B,EAAOvB,KAOrC,OANGmD,GAAS,GAAIrB,EAAKuB,OAAOF,EAAO,GACnCH,QAAQC,IAAInB,GAEZG,aAAaQ,QAAQ,OAAQV,KAAKW,UAAUZ,IAC5CG,aAAaqB,WAAb,UAA2B/B,EAAOvB,KAE3B,CAAE2C,MAAM,YAAMrB,EAAMqB,MAAMY,QAAQ,SAAAC,GAAI,OAAIA,EAAKxD,KAAOuB,EAAOvB,QAExE,QACIgD,QAAQC,IAAI3B,KA+BTmC,EA1BS,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SASvB,MAAgCC,qBAAYtC,EAAS,CACjDsB,MAAO,KADX,mBAIMiB,EAAS,CACXC,QAZJ,WACI,IAAMlC,EAAO,IAAImC,KAGjB,MAAO,CAAEC,KAFIpC,EAAKqC,WAEHC,OADAtC,EAAKuC,eAUpBvB,MANJ,KAAUA,MAONwB,SAPJ,MAUA,OACI,cAACnD,EAAQoD,SAAT,CAAkBC,MAAOT,EAAzB,SACMF,K,wDCoDCY,GAjIC,WAEZ,IAAQH,EAAahD,IAAbgD,SAER,EAA4BI,mBAAS,IAArC,mBAAQ7D,EAAR,KAAe8D,EAAf,KACA,EAAgCD,mBAAS,IAAzC,mBAAQ9C,EAAR,KAAiBgD,EAAjB,KACA,EAAsBF,mBAAS,IAA/B,mBAAQvE,EAAR,KAAY0E,EAAZ,KACA,EAAoCH,oBAAS,GAA7C,mBAAQ3C,EAAR,KAAmB+C,EAAnB,KAGA,SAASjD,IACL,IAKMkD,EAAI,IAAId,KACRe,EAAUD,EAAEE,eAAeC,UAAU,EAAG,GACxCC,EAA0C,IAAlCJ,EAAEK,UAAUC,WAAWC,OAAe,IAAMP,EAAEK,UAAYL,EAAEK,UAG1E,MAAO,CAAEJ,UAASO,QAFL,UARE,CACX,KAAK,KAAM,KAAM,KAAM,KAAM,KAC7B,KAAM,KAAM,KAAM,KAAM,KAAM,MAMRR,EAAES,YAAf,YAA8BL,EAA9B,YAAuCJ,EAAEU,gBAnBxC,4CA0BlB,gCAAAC,EAAA,2DAEiC7D,IAArBmD,EAFZ,EAEYA,QAASO,EAFrB,EAEqBA,QAEb1E,GAAUe,EAJlB,iEAKU0C,EAAS,CACXtC,KAAM,WACNnB,QAAOe,UACPzB,GAAW,KAAPA,EAAY8D,KAAK0B,MAAQxF,EAC7B0B,KAAM0D,EACNzD,KAAMkD,EACNjD,cAXR,OAcI6D,IAdJ,4CA1BkB,sBA2ClB,SAASA,IACL,IAAMC,EAAczD,aAAaC,QAAQ,eACzC,QAAoByD,IAAhBD,GAA6C,OAAhBA,EAAuB,CACpD,IAAME,EAAa7D,KAAKC,MAAM0D,GAC9B,GAAkB,OAAfE,EAAqB,OACxBpB,EAASoB,EAAWlF,OACpB+D,EAAWmB,EAAWnE,SACtBiD,EAAMkB,EAAW5F,IACjB2E,EAAaiB,EAAWhE,YAmBhC,OAPAiE,qBAAW,WAC8C,OAAjC5D,aAAaC,QAAQ,SACxBD,aAAaQ,QAAQ,OAAQ,MAE9CgD,MACD,IAGC,eAACK,GAAD,CAAenG,QAAS,EAAGT,KAAK,IAAIc,GAAG,WAAvC,UACI,cAAC,KAAD,UACI,0DAEJ,eAAC+F,GAAD,CAAMC,aAAa,MAAnB,UACI,eAACnH,EAAD,CACIQ,UAAU,MACVE,MAAM,SACNI,QAAS,EACTV,QAAQ,iBAJZ,UAMI,cAACgH,EAAA,EAAD,CACIC,MAAQtE,EAAY,YAAc,QAClCuE,WAAS,EACTC,KAAK,QACLC,WAAS,EACTnG,QAAQ,WACRmE,MAAQ3D,EACR4F,SAAW,SAAAC,GAAC,OAAE/B,EAAS+B,EAAEC,OAAOnC,UAEpC,cAACoC,GAAD,CACIC,QAAS,kBAAI/B,GAAc/C,IAC3B+E,MAAQ/E,EAAY,YAAc,UAFtC,SAII,cAACgF,GAAA,EAAD,MAEJ,cAACvG,EAAA,EAAD,CACIE,WAAY,IACZC,eAAgB,IAChBE,MAAM,uBACNJ,OAAK,EAJT,SAMI,cAACmG,GAAD,CAAMC,QAhD1B,WACIlC,EAAS,IACTC,EAAW,IACXC,EAAM,IACNC,GAAa,GACb1C,aAAaqB,WAAW,gBA2CR,SACI,cAACuD,GAAA,EAAD,WAIZ,cAACC,EAAA,EAAD,IACA,eAACjI,EAAD,CAAUc,QAAS,EAAGH,OAAO,uBAAuBH,UAAU,SAA9D,UACI,cAAC0H,GAAD,CACIC,YAAY,2BACZ3C,MAAQ5C,EACR6E,SAAW,SAAAC,GAAC,OAAE9B,EAAW8B,EAAEC,OAAOnC,UAEtC,cAAC4C,EAAA,EAAD,CACIC,kBAAgB,EAACP,MAAM,UACvBzG,QAAQ,YACRiG,WAAS,EACTO,QAvHF,2CAmHF,oCAgBdZ,GAAgBhH,YAAOD,EAAPC,CAAH,4GAMbiH,GAAOjH,IAAOqI,KAAV,yKAOJV,GAAO3H,YAAO8B,IAAP9B,CAAH,+FAIJiI,GAAWjI,IAAOsI,SAAV,oV,yFC/FCC,GAlDK,SAAC,GAAyC,IAAvCC,EAAsC,EAAtCA,KAAMC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aAE9BrD,EAAahD,IAAbgD,SAQR,OACI,eAACsD,GAAD,CACIH,KAAMA,EACNI,QAASH,EAFb,UAKI,cAACI,GAAA,EAAD,4CAGA,cAACC,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,mEAIJ,eAACC,GAAA,EAAD,WACI,cAACC,GAAD,CACI7H,QAAQ,YACRwG,QAASa,EACTnB,KAAK,QACLnH,QAAQ,qBACR+I,MAAM,6BACNd,kBAAgB,EAChBe,UAAU,QAPd,kBAWA,cAACF,GAAD,CACI7H,QAAQ,WACRwG,QAlChB,SAAoBH,GAChBvD,QAAQC,WAAWuE,GACnBD,EAAYhB,GACZpC,EAAS,CAAEtC,KAAM,cAAe7B,GAAIwH,KAgCxBpB,KAAK,QACL6B,UAAU,eACVjI,GAAG,SALP,2BAgBVyH,GAAe3I,YAAOoJ,KAAPpJ,CAAH,oGAEO,SAAAE,GAAK,OAAIA,EAAMC,WAGlC8I,GAAejJ,YAAOmI,IAAPnI,CAAH,6JAEJ,SAAAE,GAAK,OAAIA,EAAMiJ,aACJ,SAAAjJ,GAAK,OAAIA,EAAMC,WAGX,SAAAD,GAAK,OAAIA,EAAMgJ,SCoF7BG,GArJE,WAEb,MAA4BhH,IAApBwB,EAAR,EAAQA,MAAOwB,EAAf,EAAeA,SACf,EAAgCI,mBAAS,MAAzC,mBAAO6D,EAAP,KAAiBC,EAAjB,KACMf,EAAOgB,QAAQF,GACrB,EAAwC7D,mBAAS,CAAEgE,KAAM,EAAGC,KAAM,IAAlE,0BAAUD,EAAV,EAAUA,KAAMC,EAAhB,EAAgBA,KAAQC,EAAxB,KACA,EAAwClE,oBAAS,GAAjD,mBAAQmE,EAAR,KAAqBC,EAArB,KACA,EAA0CpE,mBAAS,MAAnD,mBAAQiD,EAAR,KAAsBoB,EAAtB,KAEA,EAAsCrE,mBAAS,CAC3C7D,MAAM,GAAIe,QAAQ,GAAIC,KAAK,GAAI1B,GAAG,GAAI4B,UAAU,KADpD,mBAAO8D,EAAP,KAAoBmD,EAApB,KAWA,SAASC,IACLT,EAAY,MArBG,4CAkCnB,sBAAA9C,EAAA,sDACItD,aAAaqB,WAAW,eACxBrB,aAAaQ,QAAQ,cAAeV,KAAKW,UAAUgD,IACnDqD,YAAW,WACmBC,SAASC,eAAe,YAChCC,UACnB,KANP,4CAlCmB,sBAiDnB,OANArD,qBAAW,WAC8C,OAAjC5D,aAAaC,QAAQ,SACxBD,aAAaQ,QAAQ,OAAQ,MAC9C0B,EAAS,CAAEtC,KAAM,mBAClB,CAACsC,IAGA,eAACgF,GAAD,CAAexJ,QAAS,EAAGT,KAAM,EAAjC,UACI,cAAC,KAAD,UACI,2DAEJ,eAAC,GAAD,CAAeA,KAAM,EAAGG,UAAU,SAAlC,UACI,eAAC+J,GAAD,CACIzJ,QAAS,EACTT,KAAM,EACNC,OAAQ,EACRK,OAAO,OACPD,MAAM,SACNN,QAAQ,iBANZ,UAQI,cAACW,EAAD,CAAUH,MAAM,MAAhB,mBAGA,cAACqH,EAAA,EAAD,CAASuC,YAAY,aACrB,cAACzJ,EAAD,CAAUH,MAAM,MAAhB,qBAGA,cAACqH,EAAA,EAAD,CAASuC,YAAY,aACrB,cAACzJ,EAAD,CAAUH,MAAM,MAAhB,wBAIJ,cAACqH,EAAA,EAAD,IACA,cAACwC,GAAD,CAActJ,GAAG,YAAYX,UAAU,iBAAvC,SACKsD,EAAMwC,OAAS,GAAKxC,EAAM4G,KAAK,SAAA/H,GAAI,OAChC,eAACgI,GAAD,CAEI/J,MAAM,OACND,OAAO,OACPD,MAAM,SACNkK,cAAgB,SAAClD,IArEzC,SAAqBA,GACjBkC,EAAY,CAAEF,KAAMhC,EAAEmD,QAASlB,KAAMjC,EAAEoD,UACvCpD,EAAEqD,iBACFrD,EAAEsD,kBACFxB,EAAY9B,EAAEC,QAkEUsD,CAAYvD,GACZqC,EAAgBpH,EAAKxB,IACrB6I,EAAe,CACXnI,MAAOc,EAAKd,MACZe,QAASD,EAAKC,QACdC,KAAMF,EAAKE,KACX1B,GAAIwB,EAAKxB,GACT4B,UAAWJ,EAAKI,aAb5B,UAiBI,cAACmI,GAAD,CACItK,MAAM,MACNkH,MAAM,eACN1H,QAAUuC,EAAKI,UAAY,UAAY,UAH3C,SAKMJ,EAAKd,QAEX,cAACqJ,GAAD,CAAWtK,MAAM,MAAMkH,MAAM,eAA7B,SACMnF,EAAKC,UAEX,cAACsI,GAAD,CAAWtK,MAAM,MAAMkH,MAAM,eAAejG,MAAOc,EAAKG,KAAxD,SACMH,EAAKE,SA3BLF,EAAKxB,SAiCvB,cAACgK,GAAA,EAAD,CACI1C,KAAMA,EACNI,QAASoB,EACTmB,gBAAgB,iBAChBC,eAAgB,CAAEC,IAAK3B,EAAM4B,KAAM7B,GAJvC,SAMI,eAAC1J,EAAD,CAAUQ,UAAU,SAApB,UACI,cAACgL,GAAD,CACI1K,QAAS,IACT+G,QAAU,kBAzHf,0CAyHqB4D,IAFpB,kBAMA,cAACxD,EAAA,EAAD,IACA,cAACuD,GAAD,CACI1K,QAAS,IACT+G,QAxGxB,WACIiC,GAAe,GACfG,KAoGgB,yBAQR,cAAC,GAAD,CACIxB,KAAMoB,EACNnB,YA5GhB,SAA2BhB,GACvBA,EAAEsD,kBACFlB,GAAe,IA2GHnB,aAAcA,IAElB,cAACV,EAAA,EAAD,IACA,eAACyD,GAAD,CAAQ5K,QAAS,EAAGJ,MAAM,SAA1B,UACI,cAACiL,GAAA,EAAD,CAAa7D,MAAM,YAAY9G,SAAS,UAD5C,OAEI,cAAChB,EAAD,8DASdsK,GAAgBrK,YAAOD,EAAPC,CAAH,sIAObgH,GAAgBhH,YAAOD,EAAPC,CAAH,0FAIbsK,GAAStK,YAAOD,EAAPC,CAAH,8HAMN0K,GAAc1K,YAAOD,EAAPC,CAAH,4MAYXiL,GAAYjL,IAAOC,IAAV,iZAUD,SAAAC,GAAK,OAAIA,EAAMS,SACJ,SAAAT,GAAK,OAAIA,EAAMC,WAC1B,SAAAD,GAAK,OAAIA,EAAM2H,SAMvB2C,GAAexK,YAAOD,EAAPC,CAAH,6LAQZuL,GAAgBvL,YAAOD,EAAPC,CAAH,qMAUbyL,GAASzL,YAAOD,EAAPC,CAAH,uGCzKG2L,GAnDD,WAEV,IACQ1G,GAASF,EADG1C,IAAZ0C,WACAE,KACR,EAAqBQ,mBAgBdR,EAAO,IAAMA,EAAO,EAAU,eAC9BA,EAAO,GAAW,iBAClBA,EAAO,IAAMA,EAAO,EAAU,eAC1B,SAnBH2G,EAAR,oBAEA,EAA4BnG,mBAAS,KAArC,mBAAQ9E,EAAR,KAAekL,EAAf,KAqBA,OAnBA,WACI,IACIC,OAAOC,iBAAiB,UAAU,WAC9BF,EAASC,OAAOE,eAGxB,MAAMC,GAAO/H,QAAQC,IAAI8H,EAAI7H,UAGjC8H,GAWI,eAACC,GAAD,CACItL,QAAS,EACTT,KAAM,EACNG,UAAU,SACVE,MAAM,SACND,eAAe,SALnB,UAOI,eAAC4L,GAAD,WAAYR,EAAZ,aACA,cAACS,GAAD,0FAGA,cAACA,GAAD,8DAGE1L,GAAS,KACX,cAAC0L,GAAD,kFAUNF,GAAYnM,YAAOD,EAAPC,CAAH,sIAOToM,GAAWpM,YAAOD,EAAPC,CAAH,iVAaRqM,GAAerM,IAAOC,IAAV,oPChCHqM,GApCH,WAOR,OALAvF,qBAAU,WACmB,OAAtB5D,aAAaH,MAChBG,aAAaQ,QAAQ,OAAQ,SAI7B,cAAC4I,GAAA,EAAD,CAAgBC,aAAW,EAA3B,SACI,eAACzM,EAAD,CAAUQ,UAAU,MAApB,UACI,cAAC,KAAD,UACI,yDAEJ,eAAC,IAAD,WACI,cAAC,EAAD,IACA,cAAC,KAAD,UACI,cAAC,KAAD,CAAOkM,OAAK,EAACC,KAAK,eAAlB,SACI,cAAC,GAAD,QAGR,cAAC,KAAD,UACI,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,mBAAlB,SACI,cAAC,GAAD,QAGR,cAAC,KAAD,UACI,cAAC,KAAD,CAAOD,OAAK,EAACC,KAAK,wBAAlB,SACI,cAAC,GAAD,iBC/B5BC,IAASC,OACL,cAAC,EAAD,UACI,cAAC,GAAD,MAEJ1C,SAASC,eAAe,U","file":"static/js/main.9465d765.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FlexWrap = styled.div`\r\n    display: flex;\r\n    overflow: hidden;\r\n    background-color: ${ props => props.bgcolor };\r\n    flex-grow: ${ props => props.grow };\r\n    flex-shrink: ${ props => props.shrink};\r\n    flex-basis: ${ props => props.basis };\r\n    flex-direction: ${ props => props.direction };\r\n    justify-content: ${ props => props.justifyContent };\r\n    align-items: ${ props => props.align };\r\n    height: ${ props => props.height };\r\n    width: ${ props => props.width };\r\n    margin: ${ props => props.margin };\r\n    padding: ${ props => {\r\n        switch ( props.padding ) {\r\n            case 1: {\r\n                return \".5rem;\"\r\n            }\r\n            case 1.1: {\r\n                return \".5rem 1rem;\"\r\n            }\r\n            case 2: {\r\n                return \"1rem;\"\r\n            }\r\n            case 3: {\r\n                return \"1.5rem;\"\r\n            }\r\n            default: {\r\n                return \"0;\"\r\n            }\r\n    }\r\n    }};\r\n`\r\nexport const FlexItem = styled(FlexWrap)`\r\n    border-radius: 0.25rem;\r\n    font-size: .875rem;\r\n    justify-content: center;\r\n    padding: 0.375rem .5rem;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    font-size: ${ props => props.fontSize };\r\n`","import { FlexWrap } from \"../utils/components\";\r\nimport { AddBoxOutlined, SubjectOutlined, HomeOutlined, FaceRounded } from \"@material-ui/icons\";\r\nimport { IconButton, Tooltip, Avatar } from \"@material-ui/core\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <NavWrap direction=\"column\" id=\"nav\" shrink={0} grow={0} align=\"center\">\r\n            <Avatar variant=\"rounded\" alt=\"profile\">\r\n                <FaceRounded />\r\n            </Avatar>\r\n            <Tooltip\r\n                arrow\r\n                enterDelay={200}    \r\n                enterNextDelay={500}\r\n                placement=\"right\"\r\n                title=\"Home\" \r\n            >\r\n                <Link to=\"/writepad_v2/\">\r\n                    <IconButton id=\"home\">\r\n                        <HomeOutlined />\r\n                    </IconButton>\r\n                </Link>\r\n            </Tooltip>\r\n            <Tooltip\r\n                arrow\r\n                enterDelay={200}    \r\n                enterNextDelay={500}\r\n                placement=\"right\"\r\n                title=\"Add Note\" \r\n            >\r\n                <Link to=\"/writepad_v2/new\">\r\n                    <IconButton id=\"new-note\">\r\n                        <AddBoxOutlined />\r\n                    </IconButton>\r\n                </Link>\r\n            </Tooltip>\r\n            <Tooltip\r\n                arrow\r\n                enterDelay={200}    \r\n                enterNextDelay={500}\r\n                placement=\"right\"\r\n                title=\"View List\" \r\n            >\r\n                <Link to=\"/writepad_v2/notelist\">\r\n                    <IconButton >\r\n                        <SubjectOutlined />\r\n                    </IconButton>\r\n                </Link>\r\n            </Tooltip>\r\n        </NavWrap>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\nconst NavWrap = styled(FlexWrap)`\r\n    height: calc(100vh);\r\n    box-shadow: 0 0 .375rem rgba(0, 0, 0, 0.3);\r\n    padding: .75rem .5rem;\r\n\r\n    @media only screen and ( max-width: 500px ) {\r\n        display: none ;\r\n        flex-grow: 0;\r\n    }\r\n`","import React, { useContext, useReducer } from \"react\";\r\n\r\nconst Context = React.createContext();\r\nexport const useContextProvider = () => useContext(Context);\r\n\r\nconst reducer = ( state, action ) => {\r\n\r\n    const note = {\r\n        title: action.title,\r\n        details: action.details,\r\n        id: action.id,\r\n        date: action.date,\r\n        time: action.time,\r\n        important: action.important,\r\n    }\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case \"ADD_NOTE\": {\r\n            const keys = JSON.parse(localStorage.getItem('keys'));\r\n            const uniqueKeys = Array.from(new Set(keys)); //remove duplicates\r\n\r\n            const found = uniqueKeys.find(key => key === `${action.id}`)\r\n            if(!found) {\r\n                localStorage.setItem(\r\n                    'keys', JSON.stringify([...uniqueKeys, `${action.id}`]));\r\n            }\r\n            localStorage.setItem(`${action.id}`, JSON.stringify(note));\r\n            localStorage.setItem( 'currentNote', JSON.stringify(note));\r\n\r\n            return { notes: [] }; //needs to clear notes every time to see updates when list NoteList reloads\r\n        }\r\n\r\n        case \"GRAB_STORAGE\": {\r\n            try {\r\n                const keys = JSON.parse(localStorage.getItem('keys'));\r\n                keys.forEach( (keyItem) => {\r\n                    const newItem = JSON.parse(localStorage.getItem(keyItem));\r\n                    const found = state.notes.find(note => note.id === newItem.id);\r\n                    if( !found ) state.notes = [ ...state.notes, newItem ];\r\n                })\r\n            }\r\n            catch(error) { console.log(error.message) }\r\n            finally { return { notes: [ ...state.notes ] }} \r\n        }\r\n\r\n        case \"DELETE_NOTE\": {\r\n            const keys = JSON.parse(localStorage.getItem('keys'));\r\n            const index = keys.indexOf(`${action.id}`); \r\n            if(index > -1 ) keys.splice(index, 1); //remove selected id from keys\r\n            console.log(keys)\r\n            \r\n            localStorage.setItem('keys', JSON.stringify(keys));\r\n            localStorage.removeItem(`${action.id}`);\r\n          \r\n            return { notes: [ ...state.notes.filter( item => item.id !== action.id)] }\r\n          }\r\n        default: \r\n            console.log(state)\r\n\r\n    }\r\n};\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    function getTime() {\r\n        const time = new Date();\r\n        const hour = time.getHours();\r\n        const minute = time.getMinutes();\r\n        return { hour, minute }\r\n    }\r\n\r\n    const [ { notes }, dispatch ] = useReducer( reducer, { \r\n        notes: []\r\n    } );\r\n\r\n    const values = {  \r\n        getTime, \r\n        notes,\r\n        dispatch\r\n    };\r\n\r\n    return (\r\n        <Context.Provider value={values}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextProvider\r\n","import styled from 'styled-components';\r\nimport { useContextProvider } from '../context/ContextProvider';\r\nimport { useState, useEffect } from 'react';\r\nimport { FlexWrap } from \"../utils/components\";\r\nimport { Button, Divider, IconButton, TextField, Tooltip } from \"@material-ui/core\";\r\nimport { NoteAddOutlined, ErrorOutline } from \"@material-ui/icons\";\r\nimport { Helmet as Head } from 'react-helmet';\r\n\r\nconst NewNote = () => {\r\n\r\n    const { dispatch } = useContextProvider();\r\n\r\n    const [ title, setTitle ] = useState('');\r\n    const [ details, setDetails ] = useState('');\r\n    const [ id, setId ] = useState('');\r\n    const [ important, setImportant ] = useState(false);\r\n\r\n    \r\n    function date() {\r\n        const months = [\r\n            \"01\",\"02\", \"03\", \"04\", \"05\", \"06\", \r\n            \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"\r\n        ]\r\n    \r\n        const d = new Date();\r\n        const timeNow = d.toTimeString().substring(0, 5);\r\n        const today = d.getDate().toString().length === 1 ? '0' + d.getDate() : d.getDate();\r\n        const dateNow = `${months[d.getMonth()]}-${today}-${d.getFullYear()}`\r\n\r\n        return { timeNow, dateNow };\r\n    }\r\n    \r\n\r\n\r\n    async function saveNote() {\r\n\r\n        const { timeNow, dateNow } = date();\r\n\r\n        if(!title || !details) return;\r\n        await dispatch({ \r\n            type: 'ADD_NOTE',\r\n            title, details,\r\n            id: id === '' ? Date.now() : id,\r\n            date: dateNow,\r\n            time: timeNow,\r\n            important\r\n        });\r\n\r\n        grabCurrentNote();\r\n    };\r\n\r\n    function grabCurrentNote() {\r\n        const currentNote = localStorage.getItem(\"currentNote\")\r\n        if( currentNote !== undefined || currentNote !== null ) {\r\n            const parsedNote = JSON.parse(currentNote);\r\n            if(parsedNote === null) return;\r\n            setTitle(parsedNote.title);\r\n            setDetails(parsedNote.details);\r\n            setId(parsedNote.id);\r\n            setImportant(parsedNote.important);\r\n        }\r\n    }\r\n\r\n    function newNote() {\r\n        setTitle('');\r\n        setDetails('');\r\n        setId('');\r\n        setImportant(false);\r\n        localStorage.removeItem('currentNote');\r\n    }\r\n\r\n    useEffect( () => {\r\n        const keysNotNull = localStorage.getItem('keys') !== null;\r\n        if(!keysNotNull) localStorage.setItem('keys', '[]')\r\n\r\n        grabCurrentNote();\r\n    }, [])\r\n\r\n    return (\r\n        <FlexContainer padding={1} grow=\"1\" id=\"new-note\">\r\n            <Head>\r\n                <title>Writepad - New Note</title>\r\n            </Head>\r\n            <Form autoComplete=\"off\">\r\n                <FlexWrap \r\n                    direction=\"row\" \r\n                    align=\"center\" \r\n                    padding={1}\r\n                    bgcolor=\"var(--accent1)\"    \r\n                >\r\n                    <TextField \r\n                        label={ important ? \"Important\" : \"Title\"}\r\n                        fullWidth \r\n                        size=\"small\" \r\n                        autoFocus\r\n                        variant=\"outlined\"\r\n                        value={ title }\r\n                        onChange={ e=>setTitle(e.target.value) }\r\n                    />\r\n                    <Icon \r\n                        onClick={()=>setImportant(!important)}\r\n                        color={ important ? \"secondary\" : \"default\"}\r\n                    >\r\n                        <ErrorOutline />\r\n                    </Icon>\r\n                    <Tooltip \r\n                        enterDelay={200}\r\n                        enterNextDelay={600}\r\n                        title=\"Clear and Create New\" \r\n                        arrow \r\n                    >\r\n                        <Icon onClick={newNote}>\r\n                            <NoteAddOutlined />\r\n                        </Icon>\r\n                    </Tooltip>\r\n                </FlexWrap>\r\n                <Divider />\r\n                <FlexWrap padding={1} height=\"calc(100% - 4.25rem)\" direction=\"column\">\r\n                    <TextArea \r\n                        placeholder=\"Enter note details here.\" \r\n                        value={ details }\r\n                        onChange={ e=>setDetails(e.target.value) }\r\n                    />\r\n                    <Button \r\n                        disableElevation color=\"primary\" \r\n                        variant=\"contained\" \r\n                        fullWidth\r\n                        onClick={saveNote}\r\n                    >\r\n                        Save Changes\r\n                    </Button>\r\n                </FlexWrap>\r\n            </Form>\r\n        </FlexContainer>\r\n    )\r\n}\r\n\r\nexport default NewNote\r\n\r\nconst FlexContainer = styled(FlexWrap)`\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\n\r\nconst Form = styled.form`\r\n    /* background-color: #fffde7; */\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: var(--shadow1);\r\n    border-radius: 0.25rem;\r\n    `\r\nconst Icon = styled(IconButton)`\r\n    margin-left: .375rem;\r\n    /* color: white !important; */\r\n    `\r\nconst TextArea = styled.textarea`\r\n    background-color: transparent;\r\n    border-radius: 0.25rem;\r\n    resize: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    /* transform: translateY(-.5rem); */\r\n    font-size: .875rem !important;\r\n    color: var(--text3);\r\n    outline: none;\r\n    border: none;\r\n    margin-bottom: .5rem\r\n`","import { \r\n    Button, \r\n    Dialog, \r\n    DialogActions, \r\n    DialogContent, \r\n    DialogContentText, \r\n    DialogTitle \r\n} from '@material-ui/core';\r\nimport styled from 'styled-components';\r\nimport { useContextProvider } from '../context/ContextProvider'\r\n\r\nconst DeleteAlert = ({ open, handleClose, itemToDelete }) => {\r\n\r\n    const { dispatch } = useContextProvider();\r\n\r\n    function deleteItem(e) {\r\n        console.log(typeof itemToDelete)\r\n        handleClose(e);\r\n        dispatch({ type: 'DELETE_NOTE', id: itemToDelete });\r\n    }\r\n\r\n    return (\r\n        <DeleteDialog\r\n            open={open}\r\n            onClose={handleClose}\r\n\r\n        >\r\n            <DialogTitle>\r\n                Permanently delete this note?\r\n            </DialogTitle>\r\n            <DialogContent>\r\n                <DialogContentText>\r\n                    There's no turning back once this note is deleted.\r\n                </DialogContentText>\r\n            </DialogContent>\r\n            <DialogActions>\r\n                <ActionButton \r\n                    variant=\"contained\" \r\n                    onClick={handleClose}\r\n                    size=\"small\"\r\n                    bgcolor=\"var(--btn-primary)\"\r\n                    hover=\"var(--btn-primary-hovered)\"\r\n                    disableElevation\r\n                    fontcolor=\"white\"\r\n                >\r\n                    Keep\r\n                </ActionButton>\r\n                <ActionButton  \r\n                    variant=\"outlined\" \r\n                    onClick={deleteItem}\r\n                    size=\"small\"\r\n                    fontcolor=\"var(--text4)\"\r\n                    id=\"delete\"\r\n                >\r\n                    Delete\r\n                </ActionButton>\r\n            </DialogActions>\r\n        </DeleteDialog>\r\n    )\r\n}\r\n\r\nexport default DeleteAlert\r\n\r\nconst DeleteDialog = styled(Dialog)`\r\n    box-shadow: var(--shadow1) !important;\r\n    background-color: ${ props => props.bgcolor};\r\n`\r\n\r\nconst ActionButton = styled(Button)`\r\n    font-size: .75rem;\r\n    color: ${ props => props.fontcolor };\r\n    background-color: ${ props => props.bgcolor};\r\n    \r\n    &:hover {\r\n        background-color: ${ props => props.hover};\r\n    }\r\n`","import styled from 'styled-components';\r\nimport { useEffect, useState } from 'react';\r\nimport { Divider, Popover } from '@material-ui/core';\r\nimport { FlexItem, FlexWrap } from '../utils/components';\r\nimport { useContextProvider } from '../context/ContextProvider';\r\nimport { Helmet as Head } from 'react-helmet';\r\nimport { HelpOutline } from '@material-ui/icons';\r\nimport DeleteAlert from './DeleteAlert';\r\n\r\nconst NoteList = () => {\r\n\r\n    const { notes, dispatch } = useContextProvider();\r\n    const [anchorEl, setAnchorEl] = useState(null);\r\n    const open = Boolean(anchorEl);\r\n    const [ { posX, posY }, setPosition ] = useState({ posX: 0, posY: 0 });\r\n    const [ deleteAlert, setDeleteAlert ] = useState(false);\r\n    const [ itemToDelete, setItemToDelete ] = useState(null);\r\n\r\n    const [currentNote, setCurrentNote] = useState({ \r\n        title:'', details:'', date:'', id:'', important:'' \r\n    })\r\n    \r\n\r\n    function openPopover(e) {\r\n        setPosition({ posX: e.clientX, posY: e.clientY })\r\n        e.preventDefault();\r\n        e.stopPropagation();\r\n        setAnchorEl(e.target);\r\n    }\r\n    function closePopover() {\r\n        setAnchorEl(null)\r\n    }\r\n    \r\n    function openDeleteDialog() {\r\n        setDeleteAlert(true)\r\n        closePopover();\r\n    }\r\n    function closeDeleteDialog(e) {\r\n        e.stopPropagation();\r\n        setDeleteAlert(false);\r\n    }\r\n    \r\n    \r\n    async function editItem() {\r\n        localStorage.removeItem('currentNote');\r\n        localStorage.setItem('currentNote', JSON.stringify(currentNote))\r\n        setTimeout(() => {\r\n            const newNoteButtonBase = document.getElementById('new-note');\r\n            newNoteButtonBase.click();\r\n        }, 100)\r\n    }\r\n    \r\n    useEffect( () => {\r\n        const keysNotNull = localStorage.getItem('keys') !== null;\r\n        if(!keysNotNull) localStorage.setItem('keys', '[]');\r\n        dispatch({ type: 'GRAB_STORAGE'})\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <MainContainer padding={1} grow={1}>\r\n            <Head>\r\n                <title>Writepad - Note List</title>\r\n            </Head>\r\n            <FlexContainer grow={1} direction=\"column\">\r\n                <Header\r\n                    padding={1}\r\n                    grow={0}\r\n                    shrink={0}\r\n                    height=\"4rem\"\r\n                    align=\"center\"\r\n                    bgcolor=\"var(--accent1)\"\r\n                >\r\n                    <FlexItem width=\"25%\">\r\n                        Title\r\n                    </FlexItem>\r\n                    <Divider orientation=\"vertical\" />\r\n                    <FlexItem width=\"55%\">\r\n                        Details\r\n                    </FlexItem>\r\n                    <Divider orientation=\"vertical\" />\r\n                    <FlexItem width=\"20%\">\r\n                        Created\r\n                    </FlexItem>\r\n                </Header>\r\n                <Divider />\r\n                <NotesWrapper id=\"note-item\" direction=\"column-reverse\">\r\n                    {notes.length > 0 && notes.map( note => (\r\n                        <ContentWrap \r\n                            key={ note.id }\r\n                            width=\"100%\"   \r\n                            height=\"3rem\" \r\n                            align=\"center\"\r\n                            onContextMenu={ (e)=>{\r\n                                openPopover(e);\r\n                                setItemToDelete(note.id);\r\n                                setCurrentNote({\r\n                                    title: note.title,\r\n                                    details: note.details,\r\n                                    date: note.date,\r\n                                    id: note.id,\r\n                                    important: note.important,\r\n                                })    \r\n                            }}\r\n                        >\r\n                            <FlexChild \r\n                                width=\"25%\" \r\n                                color=\"var(--text1)\" \r\n                                bgcolor={ note.important ? \"#ffcdd2\" : \"#b2ebf2\" }\r\n                            >\r\n                                { note.title }\r\n                            </FlexChild>\r\n                            <FlexChild width=\"55%\" color=\"var(--text2)\">\r\n                                { note.details }\r\n                            </FlexChild>\r\n                            <FlexChild width=\"20%\" color=\"var(--text4)\" title={note.time}>\r\n                                { note.date }\r\n                            </FlexChild>\r\n\r\n                        </ContentWrap>\r\n                    ))}\r\n                </NotesWrapper>\r\n                <Popover\r\n                    open={open}\r\n                    onClose={closePopover}\r\n                    anchorReference=\"anchorPosition\"\r\n                    anchorPosition={{ top: posY, left: posX }}\r\n                >\r\n                    <FlexWrap direction=\"column\">\r\n                        <ContextOption \r\n                            padding={1.1}\r\n                            onClick={ () => editItem()}\r\n                        >\r\n                            Edit\r\n                        </ContextOption>\r\n                        <Divider />\r\n                        <ContextOption \r\n                            padding={1.1}\r\n                            onClick={openDeleteDialog}\r\n                        >\r\n                            Delete\r\n                        </ContextOption>\r\n                    </FlexWrap>\r\n                </Popover>\r\n                <DeleteAlert \r\n                    open={deleteAlert}\r\n                    handleClose={closeDeleteDialog}\r\n                    itemToDelete={itemToDelete}\r\n                />\r\n                <Divider />\r\n                <Footer padding={2} align=\"center\">\r\n                    <HelpOutline color=\"secondary\" fontSize=\"small\" />&nbsp;\r\n                    <FlexWrap>Right click on a note to see options.</FlexWrap>\r\n                </Footer>\r\n            </FlexContainer>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nexport default NoteList\r\n\r\nconst MainContainer = styled(FlexWrap)`\r\n    max-height: 100vh;\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nconst FlexContainer = styled(FlexWrap)`\r\n    border-radius: 0.25rem;\r\n    box-shadow: var(--shadow1);\r\n`\r\nconst Header = styled(FlexWrap)`\r\n    user-select: none;\r\n    font-size: .875rem;\r\n    color: var(--text4);\r\n    font-weight: 600;\r\n`\r\nconst ContentWrap = styled(FlexWrap)`\r\n    user-select: none;\r\n    padding: 1rem .375rem;\r\n\r\n    /* &:first-child {\r\n        margin-top: .5rem;\r\n    } */\r\n\r\n    &:hover {\r\n        background-color: #f5f5f5;\r\n    }\r\n`\r\nconst FlexChild = styled.div`\r\n    border-radius: 0.25rem;\r\n    font-size: clamp(.75rem, 2vw, .875rem);\r\n    overflow: hidden;\r\n    padding: 0.375rem .5rem;\r\n    margin: .5rem;\r\n    text-overflow: ellipsis;\r\n    align-items: center;\r\n    text-align: center;\r\n    white-space: nowrap;\r\n    width: ${ props => props.width };\r\n    background-color: ${ props => props.bgcolor};\r\n    color: ${ props => props.color};\r\n\r\n    &:first-child {\r\n        font-weight: 500;\r\n    }\r\n`\r\nconst NotesWrapper = styled(FlexWrap)`\r\n    overflow-y: scroll;\r\n    height: calc(100% - 7rem);\r\n    scrollbar-width: none;\r\n    justify-content: start;\r\n\r\n    &::-webkit-scrollbar { display: none; }\r\n`\r\nconst ContextOption = styled(FlexWrap)`\r\n    font-size: .75rem;\r\n    justify-content: center;\r\n    cursor: pointer;\r\n    /* margin: .25rem; */\r\n\r\n    &:hover { \r\n        background-color: var(--text3);\r\n    }\r\n`\r\nconst Footer = styled(FlexWrap)`\r\n    font-size: .875rem;\r\n    color: var(--text3);\r\n    justify-self: end;\r\n`","import styled from 'styled-components';\r\nimport { useContextProvider } from '../context/ContextProvider';\r\nimport { useState } from 'react';\r\nimport { FlexWrap } from '../utils/components';\r\n\r\nconst Hello = () => {\r\n\r\n    const { getTime } = useContextProvider();\r\n    const { hour } = getTime();\r\n    const [ greeting ] = useState(greet());\r\n\r\n    const [ width, setWidth ] = useState(999);\r\n\r\n    function windowResize() {\r\n        try {\r\n            window.addEventListener('resize', () => {\r\n                setWidth(window.innerWidth)\r\n            })\r\n        }\r\n        catch(err) { console.log(err.message) }\r\n    }\r\n\r\n    windowResize();\r\n\r\n    function greet() {\r\n        if(hour < 12 && hour > 1) return \"Good Morning\";\r\n        if(hour < 18) return \"Good Afternoon\";\r\n        if(hour < 24 || hour < 1) return \"Good Evening\";\r\n        return \"Hello\"\r\n    }\r\n\r\n\r\n    return (\r\n        <Container \r\n            padding={2} \r\n            grow={1} \r\n            direction=\"column\" \r\n            align=\"center\" \r\n            justifyContent=\"center\"\r\n        >\r\n            <HelloTag>{ greeting }, User!</HelloTag>\r\n            <Instructions>\r\n                To add a note, click the \"+\" button on the top left corner of your browser.\r\n            </Instructions>\r\n            <Instructions>\r\n                To view saved notes, click the \"&#8801;\" button.\r\n            </Instructions>\r\n            { width <= 500 &&\r\n            <Instructions>\r\n                If you can't see the buttons, try resizing your browser window.\r\n            </Instructions>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Hello\r\n\r\nconst Container = styled(FlexWrap)`\r\n    max-height: 100vh;\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nconst HelloTag = styled(FlexWrap)`\r\n    background-color: var(--accent1);\r\n    border-radius: .5rem;\r\n    color: var(--text3);\r\n    font-size: 2rem; \r\n    font-weight: 500;\r\n    margin-bottom: 1.5rem;\r\n    padding: 1rem 2rem;\r\n\r\n    @supports(font-size: clamp(1.75rem, 5vw, 2.25rem)) {\r\n        font-size: clamp(1.75rem, 5vw, 2.25rem); \r\n    }\r\n`\r\nconst Instructions = styled.div`\r\n    color: var(--text3);\r\n    font-size: .875rem;\r\n    line-height: 2rem;\r\n    text-align: center;\r\n    \r\n    @supports(font-size: clamp(.875rem, 2vw, 1rem)) {\r\n        font-size: clamp(.875rem, 2vw, 1rem); \r\n    }\r\n`","import { useEffect } from 'react';\r\nimport Nav from \"./components/Nav\";\r\nimport NewNote from \"./components/NewNote\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport { FlexWrap } from \"./utils/components\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NoteList from \"./components/NoteList\";\r\nimport Hello from './components/Hello';\r\nimport { Helmet as Head } from 'react-helmet';\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        if(localStorage.keys !== null) return;\r\n        localStorage.setItem(\"keys\", \"[]\")\r\n    })\r\n\r\n    return (\r\n        <StylesProvider injectFirst>\r\n            <FlexWrap direction=\"row\">\r\n                <Head>\r\n                    <title>Writepad - Welcome</title>\r\n                </Head>\r\n                <Router>\r\n                    <Nav />\r\n                    <Switch>\r\n                        <Route exact path=\"/writepad_v2\">\r\n                            <Hello />\r\n                        </Route>\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route exact path=\"/writepad_v2/new\">\r\n                            <NewNote />\r\n                        </Route>\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route exact path=\"/writepad_v2/notelist\">\r\n                            <NoteList />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </FlexWrap>\r\n        </StylesProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ContextProvider from './context/ContextProvider.js';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}