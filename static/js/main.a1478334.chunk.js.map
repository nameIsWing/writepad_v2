{"version":3,"sources":["utils/components.js","components/Nav.js","context/ContextProvider.js","components/NewNote.js","components/NoteList.js","components/Hello.js","App.js","index.js"],"names":["FlexWrap","styled","div","props","bgcolor","grow","shrink","basis","direction","justifyContent","align","height","width","margin","padding","FlexItem","fontSize","Nav","NavWrap","id","Tooltip","arrow","enterDelay","enterNextDelay","placement","title","to","IconButton","AddBoxOutlined","SubjectOutlined","Context","React","createContext","useContextProvider","useContext","reducer","state","action","note","details","date","time","important","type","keys","JSON","parse","localStorage","getItem","find","key","setItem","stringify","notes","forEach","keyItem","newItem","console","log","ContextProvider","children","useReducer","values","dispatch","Provider","value","NewNote","useState","setTitle","setDetails","setId","setImportant","d","Date","timeNow","toTimeString","substring","today","getDate","toString","length","dateNow","getMonth","getFullYear","a","now","grabCurrentNote","currentNote","undefined","parsedNote","useEffect","FlexContainer","Form","autoComplete","TextField","label","fullWidth","size","autoFocus","variant","onChange","e","target","Icon","onClick","color","ErrorOutline","removeItem","NoteAddOutlined","Divider","TextArea","placeholder","Button","disableElevation","form","textarea","NoteList","MainContainer","Header","orientation","NotesWrapper","map","ButtonBase","ContentWrap","onDoubleClick","item","newNoteButton","document","getElementById","click","editItem","FlexChild","Hello","setWidth","window","addEventListener","innerWidth","Container","HelloTag","Instructions","App","StylesProvider","injectFirst","exact","path","ReactDOM","render"],"mappings":"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","file":"static/js/main.a1478334.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const FlexWrap = styled.div`\r\n    display: flex;\r\n    overflow: hidden;\r\n    background-color: ${ props => props.bgcolor };\r\n    flex-grow: ${ props => props.grow };\r\n    flex-shrink: ${ props => props.shrink};\r\n    flex-basis: ${ props => props.basis };\r\n    flex-direction: ${ props => props.direction };\r\n    justify-content: ${ props => props.justifyContent };\r\n    align-items: ${ props => props.align };\r\n    height: ${ props => props.height };\r\n    width: ${ props => props.width };\r\n    margin: ${ props => props.margin };\r\n    padding: ${ props => {\r\n        switch ( props.padding ) {\r\n            case 1: {\r\n                return \".5rem;\"\r\n            }\r\n            case 2: {\r\n                return \"1rem;\"\r\n            }\r\n            case 3: {\r\n                return \"1.5rem;\"\r\n            }\r\n            default: {\r\n                return \"0;\"\r\n            }\r\n        }\r\n    }};\r\n`\r\nexport const FlexItem = styled(FlexWrap)`\r\n    border-radius: 0.25rem;\r\n    font-size: .875rem;\r\n    justify-content: center;\r\n    padding: 0.375rem .5rem;\r\n    text-overflow: ellipsis;\r\n    white-space: nowrap;\r\n    font-size: ${ props => props.fontSize };\r\n`","import { FlexWrap } from \"../utils/components\";\r\nimport { AddBoxOutlined, SubjectOutlined } from \"@material-ui/icons\";\r\nimport { IconButton, Tooltip } from \"@material-ui/core\";\r\nimport styled from 'styled-components';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n        <NavWrap direction=\"column\" padding={1} id=\"nav\" shrink={0}>\r\n            <Tooltip\r\n                arrow\r\n                enterDelay={200}    \r\n                enterNextDelay={500}\r\n                placement=\"right\"\r\n                title=\"Add Note\" \r\n            >\r\n                <Link to=\"/new\">\r\n                    <IconButton id=\"new-note\">\r\n                        <AddBoxOutlined />\r\n                    </IconButton>\r\n                </Link>\r\n            </Tooltip>\r\n            <Tooltip\r\n                arrow\r\n                enterDelay={200}    \r\n                enterNextDelay={500}\r\n                placement=\"right\"\r\n                title=\"View List\" \r\n            >\r\n                <Link to=\"/notelist\">\r\n                    <IconButton >\r\n                        <SubjectOutlined />\r\n                    </IconButton>\r\n                </Link>\r\n            </Tooltip>\r\n        </NavWrap>\r\n    )\r\n}\r\n\r\nexport default Nav\r\n\r\nconst NavWrap = styled(FlexWrap)`\r\n    height: calc(100vh);\r\n    position: relative;\r\n    box-shadow: 0 0 .375rem rgba(0, 0, 0, 0.3);\r\n    width: max-content;\r\n\r\n    @media only screen and ( max-width: 500px ) {\r\n        background-color: red;\r\n        display: none !important;\r\n        flex-grow: 0 !important;\r\n    }\r\n\r\n`","import React, { useContext, useReducer } from \"react\";\r\n\r\nconst Context = React.createContext();\r\nexport const useContextProvider = () => useContext(Context);\r\n\r\nconst reducer = ( state, action ) => {\r\n\r\n    const note = {\r\n        title: action.title,\r\n        details: action.details,\r\n        id: action.id,\r\n        date: action.date,\r\n        time: action.time,\r\n        important: action.important,\r\n    }\r\n\r\n\r\n    switch (action.type) {\r\n\r\n        case \"ADD_NOTE\": {\r\n            const keys = JSON.parse(localStorage.getItem('keys'));\r\n            const found = keys.find(key => key === action.id)\r\n            if(!found) {\r\n                localStorage.setItem(\r\n                    'keys', JSON.stringify([...keys, `${action.id}`]));\r\n            }\r\n            localStorage.setItem(`${action.id}`, JSON.stringify(note));\r\n            localStorage.setItem( 'currentNote', JSON.stringify(note));\r\n\r\n            return { notes: [] }; //needs to clear notes every time to see updates when list component reloads\r\n        }\r\n        // break;\r\n\r\n        case \"GRAB_STORAGE\": {\r\n            const keys = JSON.parse(localStorage.getItem('keys'));\r\n            keys.forEach( (keyItem) => {\r\n                const newItem = JSON.parse(localStorage.getItem(keyItem));\r\n                const found = state.notes.find(note => note.id === newItem.id);\r\n                if( !found ) state.notes = [ ...state.notes, newItem ];\r\n            })\r\n            return { notes: [ ...state.notes ] }\r\n        }\r\n\r\n        default: \r\n            console.log(state)\r\n\r\n    }\r\n};\r\n\r\nconst ContextProvider = ({ children }) => {\r\n\r\n    const [ { notes }, dispatch ] = useReducer( reducer, { \r\n        notes: []\r\n    } );\r\n\r\n    const values = { notes, dispatch };\r\n\r\n    return (\r\n        <Context.Provider value={values}>\r\n            { children }\r\n        </Context.Provider>\r\n    )\r\n}\r\n\r\nexport default ContextProvider\r\n","import styled from 'styled-components';\r\nimport { useContextProvider } from '../context/ContextProvider';\r\nimport { useState, useEffect } from 'react';\r\nimport { FlexWrap } from \"../utils/components\";\r\nimport { Button, Divider, IconButton, TextField, Tooltip } from \"@material-ui/core\";\r\nimport { NoteAddOutlined, ErrorOutline } from \"@material-ui/icons\";\r\n\r\nconst NewNote = () => {\r\n\r\n    const { dispatch } = useContextProvider();\r\n\r\n    const [ title, setTitle ] = useState('');\r\n    const [ details, setDetails ] = useState('');\r\n    const [ id, setId ] = useState('');\r\n    const [ important, setImportant ] = useState(false);\r\n\r\n    \r\n    function date() {\r\n        const months = [\r\n            \"01\",\"02\", \"03\", \"04\", \"05\", \"06\", \r\n            \"07\", \"08\", \"09\", \"10\", \"11\", \"12\"\r\n        ]\r\n    \r\n        const d = new Date();\r\n        const timeNow = d.toTimeString().substring(0, 5);\r\n        const today = d.getDate().toString().length === 1 ? '0' + d.getDate() : d.getDate();\r\n        const dateNow = `${months[d.getMonth()]}-${today}-${d.getFullYear()}`\r\n\r\n        return { timeNow, dateNow };\r\n    }\r\n    \r\n\r\n\r\n    async function saveNote() {\r\n\r\n        const { timeNow, dateNow } = date();\r\n\r\n        if(!title || !details) return;\r\n        await dispatch({ \r\n            type: 'ADD_NOTE',\r\n            title, details,\r\n            id: id === '' ? Date.now() : id,\r\n            date: dateNow,\r\n            time: timeNow,\r\n            important\r\n        });\r\n\r\n        grabCurrentNote();\r\n    };\r\n\r\n    function grabCurrentNote() {\r\n        const currentNote = localStorage.getItem(\"currentNote\")\r\n        if( currentNote !== undefined || currentNote !== null ) {\r\n            const parsedNote = JSON.parse(currentNote);\r\n            if(parsedNote === null) return;\r\n            setTitle(parsedNote.title);\r\n            setDetails(parsedNote.details);\r\n            setId(parsedNote.id);\r\n            setImportant(parsedNote.important);\r\n        }\r\n    }\r\n\r\n    function newNote() {\r\n        setTitle('');\r\n        setDetails('');\r\n        setId('');\r\n        setImportant(false);\r\n        localStorage.removeItem('currentNote');\r\n    }\r\n\r\n    useEffect( () => {\r\n        const keysNotNull = localStorage.getItem('keys') !== null;\r\n        if(!keysNotNull) localStorage.setItem('keys', '[]')\r\n\r\n        grabCurrentNote();\r\n    }, [])\r\n\r\n    return (\r\n        <FlexContainer padding={2} grow=\"1\" id=\"new-note\">\r\n            <Form autoComplete=\"off\">\r\n                <FlexWrap \r\n                    direction=\"row\" \r\n                    align=\"center\" \r\n                    padding={1}\r\n                    bgcolor=\"var(--accent1)\"    \r\n                >\r\n                    <TextField \r\n                        label={ important ? \"Important\" : \"Title\"}\r\n                        fullWidth \r\n                        size=\"small\" \r\n                        autoFocus\r\n                        variant=\"outlined\"\r\n                        value={ title }\r\n                        onChange={ e=>setTitle(e.target.value) }\r\n                    />\r\n                    <Icon \r\n                        onClick={()=>setImportant(!important)}\r\n                        color={ important ? \"secondary\" : \"default\"}\r\n                    >\r\n                        <ErrorOutline />\r\n                    </Icon>\r\n                    <Tooltip \r\n                        enterDelay={200}\r\n                        enterNextDelay={600}\r\n                        title=\"Clear and Create New\" \r\n                        arrow \r\n                    >\r\n                        <Icon onClick={newNote}>\r\n                            <NoteAddOutlined />\r\n                        </Icon>\r\n                    </Tooltip>\r\n                </FlexWrap>\r\n                <Divider />\r\n                <FlexWrap padding={1} height=\"calc(100% - 4.25rem)\" direction=\"column\">\r\n                    <TextArea \r\n                        placeholder=\"Enter note details here.\" \r\n                        value={ details }\r\n                        onChange={ e=>setDetails(e.target.value) }\r\n                    />\r\n                    <Button \r\n                        disableElevation color=\"primary\" \r\n                        variant=\"contained\" \r\n                        fullWidth\r\n                        onClick={saveNote}\r\n                    >\r\n                        Save Changes\r\n                    </Button>\r\n                </FlexWrap>\r\n            </Form>\r\n        </FlexContainer>\r\n    )\r\n}\r\n\r\nexport default NewNote\r\n\r\nconst FlexContainer = styled(FlexWrap)`\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\n\r\nconst Form = styled.form`\r\n    /* background-color: #fffde7; */\r\n    width: 100%;\r\n    height: 100%;\r\n    box-shadow: var(--shadow1);\r\n    border-radius: 0.25rem;\r\n    `\r\nconst Icon = styled(IconButton)`\r\n    margin-left: .375rem;\r\n    /* color: white !important; */\r\n    `\r\nconst TextArea = styled.textarea`\r\n    background-color: transparent;\r\n    border-radius: 0.25rem;\r\n    resize: none;\r\n    height: 100%;\r\n    width: 100%;\r\n    padding: 0.5rem;\r\n    /* transform: translateY(-.5rem); */\r\n    font-size: .875rem !important;\r\n    color: var(--text3);\r\n    outline: none;\r\n    border: none;\r\n    margin-bottom: .5rem\r\n`","import styled from 'styled-components';\r\nimport { useEffect } from 'react';\r\nimport { Divider, ButtonBase } from '@material-ui/core';\r\nimport { FlexItem, FlexWrap } from '../utils/components';\r\nimport { useContextProvider } from '../context/ContextProvider';\r\n\r\nconst NoteList = () => {\r\n\r\n    const { notes, dispatch } = useContextProvider();\r\n\r\n\r\n    function editItem(title, details, date, id, important) {\r\n        const item = { title, details, date, id, important };\r\n        const newNoteButton = document.getElementById('new-note');\r\n        localStorage.setItem('currentNote', JSON.stringify(item));\r\n        newNoteButton.click();\r\n    }\r\n\r\n    useEffect( () => {\r\n        const keysNotNull = localStorage.getItem('keys') !== null;\r\n        if(!keysNotNull) localStorage.setItem('keys', '[]');\r\n        dispatch({ type: 'GRAB_STORAGE'})\r\n        // dispatch({ type: 'UPDATE_EDITED'})\r\n    }, [dispatch])\r\n\r\n    return (\r\n        <MainContainer padding={2} grow={1}>\r\n            <FlexContainer grow={1} direction=\"column\">\r\n                <Header\r\n                    padding={1}\r\n                    grow={0}\r\n                    shrink={0}\r\n                    height=\"4rem\"\r\n                    align=\"center\"\r\n                    bgcolor=\"var(--accent1)\"\r\n                >\r\n                    <FlexItem width=\"25%\">\r\n                        Title\r\n                    </FlexItem>\r\n                    <Divider orientation=\"vertical\" />\r\n                    <FlexItem width=\"55%\">\r\n                        Details\r\n                    </FlexItem>\r\n                    <Divider orientation=\"vertical\" />\r\n                    <FlexItem width=\"20%\">\r\n                        Created\r\n                    </FlexItem>\r\n                </Header>\r\n                <Divider />\r\n                <NotesWrapper  direction=\"column-reverse\">\r\n                    {notes.length > 0 && notes.map( note => (\r\n                        <ButtonBase key={ note.id } color={ note.important ? \"error\" : \"\" }>\r\n                            <ContentWrap \r\n                                width=\"100%\"   \r\n                                height=\"3rem\" \r\n                                align=\"center\"\r\n                                onDoubleClick={ () => editItem(\r\n                                        note.title,\r\n                                        note.details,\r\n                                        note.date,\r\n                                        note.id,\r\n                                        note.important,\r\n                                    )}\r\n                            >\r\n                                <FlexChild \r\n                                    width=\"25%\" \r\n                                    color=\"var(--text1)\" \r\n                                    bgcolor={ note.important ? \"#ffcdd2\" : \"#b2ebf2\" }\r\n                                >\r\n                                    { note.title }\r\n                                </FlexChild>\r\n                                <FlexChild width=\"55%\" color=\"var(--text2)\">\r\n                                    { note.details }\r\n                                </FlexChild>\r\n                                <FlexChild width=\"20%\" color=\"var(--text4)\" title={note.time}>\r\n                                    { note.date }\r\n                                </FlexChild>\r\n                            </ContentWrap>\r\n                        </ButtonBase>\r\n                    ))}\r\n                </NotesWrapper>\r\n            </FlexContainer>\r\n        </MainContainer>\r\n    )\r\n}\r\n\r\nexport default NoteList\r\n\r\nconst MainContainer = styled(FlexWrap)`\r\n    max-height: 100vh;\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nconst FlexContainer = styled(FlexWrap)`\r\n    border-radius: 0.25rem;\r\n    box-shadow: var(--shadow1);\r\n`\r\nconst Header = styled(FlexWrap)`\r\n    user-select: none;\r\n    font-size: .875rem;\r\n    color: var(--text4);\r\n    font-weight: 600;\r\n`\r\nconst ContentWrap = styled(FlexWrap)`\r\n    user-select: none;\r\n    padding: 1rem .375rem;\r\n\r\n    /* &:first-child {\r\n        margin-top: .5rem;\r\n    } */\r\n\r\n    &:hover {\r\n        background-color: #f5f5f5;\r\n    }\r\n`\r\nconst FlexChild = styled.div`\r\n    border-radius: 0.25rem;\r\n    font-size: .875rem;\r\n    overflow: hidden;\r\n    padding: 0.375rem .5rem;\r\n    margin: .5rem;\r\n    text-overflow: ellipsis;\r\n    align-items: center;\r\n    /* text-align: center; */\r\n    white-space: nowrap;\r\n    width: ${ props => props.width };\r\n    background-color: ${ props => props.bgcolor};\r\n    color: ${ props => props.color};\r\n\r\n    &:first-child {\r\n        font-weight: 500;\r\n    }\r\n`\r\nconst NotesWrapper = styled(FlexWrap)`\r\n    overflow-y: scroll;\r\n    scrollbar-width: none;\r\n\r\n    &::-webkit-scrollbar { display: none; }\r\n`","import styled from 'styled-components';\r\nimport { useState } from 'react';\r\nimport { FlexWrap } from '../utils/components';\r\n\r\nconst Hello = () => {\r\n\r\n    const [ width, setWidth ] = useState(999);\r\n\r\n    window.addEventListener('resize', () => setWidth(window.innerWidth));\r\n\r\n    return (\r\n        <Container padding={2} grow={1} direction=\"column\" align=\"center\" justifyContent=\"center\">\r\n            <HelloTag>Good Morning User!</HelloTag>\r\n            <Instructions>To start, click the \"+\" button on the top left of the screen.</Instructions>\r\n            <Instructions>To view saved notes, click the \"&#8801;\" button.</Instructions>\r\n            { width <= 500 &&\r\n            <Instructions>If you can't see the buttons, try resizing your browser window.</Instructions>\r\n            }\r\n        </Container>\r\n    )\r\n}\r\n\r\nexport default Hello\r\n\r\nconst Container = styled(FlexWrap)`\r\n    max-height: 100vh;\r\n\r\n    @media only screen and (max-width: 500px) {\r\n        height: 100vh;\r\n    }\r\n`\r\nconst HelloTag = styled(FlexWrap)`\r\n    background-color: var(--accent1);\r\n    border-radius: .5rem;\r\n    color: var(--text3);\r\n    font-size: 2rem;\r\n    font-weight: 500;\r\n    margin-bottom: 1.5rem;\r\n    padding: 1rem 2rem;\r\n    `\r\nconst Instructions = styled.div`\r\n    color: var(--text3);\r\n    font-size: .875rem; \r\n    text-align: center;\r\n    line-height: 2rem;\r\n`","import { useEffect } from 'react';\r\nimport Nav from \"./components/Nav\";\r\nimport NewNote from \"./components/NewNote\";\r\nimport { StylesProvider } from \"@material-ui/core\";\r\nimport { FlexWrap } from \"./utils/components\";\r\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport NoteList from \"./components/NoteList\";\r\nimport Hello from './components/Hello';\r\n\r\nconst App = () => {\r\n\r\n    useEffect(() => {\r\n        if(localStorage.keys !== null) return;\r\n        localStorage.setItem(\"keys\", \"[]\")\r\n    }, [])\r\n\r\n    return (\r\n        <StylesProvider injectFirst>\r\n            <FlexWrap direction=\"row\">\r\n                <Router>\r\n                    <Nav />\r\n                    <Switch>\r\n                        <Route exact path=\"/\">\r\n                            <Hello />\r\n                        </Route>\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route exact path=\"/new\">\r\n                            <NewNote />\r\n                        </Route>\r\n                    </Switch>\r\n                    <Switch>\r\n                        <Route exact path=\"/notelist\">\r\n                            <NoteList />\r\n                        </Route>\r\n                    </Switch>\r\n                </Router>\r\n            </FlexWrap>\r\n        </StylesProvider>\r\n    )\r\n}\r\n\r\nexport default App\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport ContextProvider from './context/ContextProvider.js';\r\n\r\nReactDOM.render(\r\n    <ContextProvider>\r\n        <App />\r\n    </ContextProvider>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}